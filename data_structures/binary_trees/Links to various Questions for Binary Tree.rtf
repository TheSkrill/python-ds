{\rtf1\ansi\ansicpg1252\cocoartf2509
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84314;\cssrgb\c100000\c100000\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl660\partightenfactor0

\f0\fs42 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In this file, we have list out commonly asked interview questions that uses binary tree -\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl660\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/check-if-two-binary-trees-are-identical-not-iterative-recursive/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check if two given binary trees are identical or not | Iterative & Recursive}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/calculate-height-binary-tree-iterative-recursive/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Calculate height of a binary tree | Iterative & Recursive}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/delete-given-binary-tree-iterative-recursive/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Delete given Binary Tree | Iterative & Recursive}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/inorder-tree-traversal-iterative-recursive/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Inorder Tree Traversal | Iterative & Recursive}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/preorder-tree-traversal-iterative-recursive/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Preorder Tree Traversal | Iterative & Recursive}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/postorder-tree-traversal-iterative-recursive/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Postorder Tree Traversal | Iterative & Recursive}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/level-order-traversal-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Level Order Traversal of Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/spiral-order-traversal-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Spiral Order Traversal of Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/reverse-level-order-traversal-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reverse Level Order Traversal of Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-nodes-binary-tree-specific-order/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print all nodes of a given binary tree in specific order}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-left-view-of-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print Left View of a Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-right-view-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print Right View of a Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-bottom-view-of-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print Bottom View of Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-top-view-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print Top View of Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-next-node-in-same-level-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find next node in same level for given node in a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/check-given-binary-tree-complete-binary-tree-not/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check if given binary tree is complete binary tree or not}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/determine-two-nodes-are-cousins/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Determine if given two nodes are cousins of each other}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-cousins-of-given-node-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print cousins of given node in a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/inplace-convert-a-tree-sum-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In-place convert given binary tree to its sum tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/check-given-binary-tree-sum-tree-not/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check if given binary tree is a sum tree or not}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/combinations-of-words-formed-replacing-given-numbers-corresponding-english-alphabet/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Combinations of words formed by replacing given numbers with corresponding alphabets}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/determine-given-binary-tree-is-subtree-of-another-binary-tree-not/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Determine if given binary tree is a subtree of another binary tree or not}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-diameter-of-a-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find diameter of a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/check-given-binary-tree-symmetric-structure-not/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check if given binary Tree has symmetric structure or not}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/convert-binary-tree-to-its-mirror/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Convert binary tree to its mirror}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/determine-binary-tree-can-converted-another-number-swaps-left-right-child/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check if binary tree can be converted to another by doing any no. of swaps of left & right child}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-lowest-common-ancestor-lca-two-nodes-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find Lowest Common Ancestor (LCA) of two nodes in a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-all-paths-from-root-to-leaf-nodes-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print all paths from root to leaf nodes in given binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-ancestors-of-given-node-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find ancestors of given node in a Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/distance-between-given-pairs-of-nodes-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find the distance between given pairs of nodes in a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-vertical-sum-given-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find Vertical Sum in a given Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/vertical-traversal-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print nodes in vertical order of a given Binary Tree (Vertical Traversal)}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-diagonal-sum-given-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find the diagonal sum of given binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-diagonal-traversal-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print Diagonal Traversal of Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-corner-nodes-every-level-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print corner nodes of every level in binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/place-convert-given-binary-tree-to-doubly-linked-list/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In-place convert convert given Binary Tree to Doubly Linked List}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/sink-nodes-containing-zero-bottom-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Sink nodes containing zero to the bottom of the binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/convert-given-binary-tree-to-full-tree-removing-half-nodes/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Convert given binary tree to full tree by removing half nodes}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/truncate-given-binary-tree-remove-nodes-lie-path-sum-less-k/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Truncate given binary tree to remove nodes which lie on a path having sum less than K}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-maximum-sum-root-to-leaf-path-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find maximum sum root-to-leaf path in a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/check-given-binary-tree-is-height-balanced-not/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check if given binary tree is height balanced or not}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/convert-normal-binary-tree-left-child-right-sibling-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Convert normal binary tree to Left-child right-sibling binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/determine-given-binary-tree-is-a-bst-or-not/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Determine if given Binary Tree is a BST or not}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/convert-binary-tree-to-bst-maintaining-original-structure/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Convert a Binary Tree to BST by maintaining its original structure}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/invert-binary-tree-recursive-iterative/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Invert given Binary Tree | Recursive and Iterative solution}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/print-leaf-to-root-path-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Print leaf to root path for every leaf node in a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-maximum-width-given-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find maximum width of given binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/build-binary-tree-given-parent-array/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Build Binary Tree from given Parent array}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-all-nodes-at-given-distance-from-leaf-nodes-in-a-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find all nodes at given distance from leaf nodes in a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/count-subtrees-value-nodes-binary-tree/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Count all subtrees having same value of nodes in a binary tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/find-maximum-difference-node-descendants/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find Maximum Difference Between a Node and its Descendants in a Binary Tree}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/construct-binary-tree-ancestor-matrix/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Construct a Binary Tree from Ancestor Matrix}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "http://www.techiedelight.com/calculate-height-binary-tree-leaf-nodes-forming-circular-doubly-linked-list/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Calculate height of a binary tree with leaf nodes forming a circular doubly linked list}}\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
}